############################################################
#       Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#       Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

#java.util.logging.MemoryHandler.target = ch.uzh.csg.liveshift.logging.LiveShiftMemoryHandler
#java.util.logging.MemoryHandler.push = INFO

#java.util.logging.ConsoleHandler.push = WARNING

# Style of output (Simple or XML): java.util.logging.XMLFormatter
java.util.logging.FileHandler.formatter =  ch.uzh.csg.liveshift.logging.LogFormatter
java.util.logging.ConsoleHandler.formatter =  ch.uzh.csg.liveshift.logging.LogFormatter
#java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Set the logging level of the root logger.
# Levels from lowest to highest are
# FINEST, FINER, FINE, CONFIG, INFO, WARNING and SEVERE.
# The default level for all loggers and handlers is INFO.
.level= FINE

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
#java.util.logging.FileHandler.pattern = liveshift.log
java.util.logging.FileHandler.pattern = /tmp/LiveShift/log/liveshift.log


# Limiting size of output file in bytes: 
#java.util.logging.FileHandler.limit = 50000

# Number of output files to cycle through, by appending an
# integer to the base file name: 
java.util.logging.FileHandler.count = 1000



# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = WARNING
java.util.logging.FileHandler.level = FINE



############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
sun.level = WARNING
ch.level = WARNING
ch.uzh.csg.liveshift.level = INFO
#ch.uzh.csg.liveshift.p2p.level = FINE
#ch.uzh.csg.liveshift.download.level = FINE
ch.uzh.csg.liveshift.upload.level = FINE
#ch.uzh.csg.liveshift.signaling.level = FINE
#ch.uzh.csg.liveshift.video.VideoPlayer.level = FINE
#ch.uzh.csg.liveshift.video.playbackpolicies.level = FINE
ch.uzh.csg.liveshift.video.EncoderReceiver.level = INFO
ch.uzh.csg.liveshift.storage.SegmentAssembler.level = INFO
ch.uzh.csg.liveshift.storage.level = INFO
#ch.uzh.csg.liveshift.player.level = FINE
#ch.uzh.csg.liveshift.logging.level = FINE


#ch.uzh.csg.liveshift.time.level = INFO
##ch.uzh.csg.liveshift.p2p.level = FINE
##ch.uzh.csg.tomp2p.p2p.DistributedHashHashMap.level = FINE
##ch.uzh.csg.liveshift.p2p = FINE
net.tomp2p.level = WARNING
##ch.uzh.csg.tomp2p.connection.level = FINEST
##ch.uzh.csg.tomp2p.connection.Dispatcher.level = FINEST
